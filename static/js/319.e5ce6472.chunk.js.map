{"version":3,"file":"static/js/319.e5ce6472.chunk.js","mappings":"qPACA,GAAgB,aAAe,uCAAuC,OAAS,iCAAiC,YAAc,sCAAsC,kBAAoB,4CAA4C,KAAO,gC,SCe5N,SAASA,IAAoB,IAAD,QACzC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkCP,GAASQ,MAAK,SAAAC,GAC1CA,GACFV,EAASU,EAASC,KAIrB,GACF,GAAE,CAACV,IAMJ,OACE,8BACGF,IACC,iCACE,mBAAQa,UAAWC,EAAAA,OAAcC,KAAK,SAASC,QARtC,WAAO,IAAD,IACrBZ,EAAQ,oBAACE,EAASW,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAClC,EAMO,sBAIA,iBAAKL,UAAWC,EAAAA,iBAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,iBAAhB,UACE,gBACEK,IACEnB,EAAMoB,YAAN,6CACwCpB,EAAMoB,cAE5C,gBAAKD,IAAKE,EAAUC,IAAI,cAG5BA,IAAKtB,EAAMuB,WAGf,iBAAKV,UAAWC,EAAAA,YAAhB,WACE,eAAID,UAAWC,EAAAA,kBAAf,mBACEd,EAAMuB,MADR,aAEKvB,EAAMwB,aAAaC,MAAM,EAAG,GAFjC,QAGA,gDAAsBC,KAAKC,MACJ,GAArB3B,EAAM4B,cADR,QAGA,eAAIf,UAAWC,EAAAA,kBAAf,wBACA,uBAAId,EAAM6B,YACV,eAAIhB,UAAWC,EAAAA,kBAAf,sBACA,0BAAOd,EAAM8B,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAIrD,4BACE,oDACA,2BACE,eAAIpB,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CACEoB,GAAE,OACFjB,MAAO,CAAEC,KAAI,oBAAEZ,EAASW,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,MAFzC,qBAOF,eAAIL,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CACEoB,GAAE,UACFjB,MAAO,CAAEC,KAAI,oBAAEZ,EAASW,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,MAFzC,8BAUN,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aAOb,C,uMCpGKC,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,EAAQ,GAARA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,gGAE2BC,EAAAA,EAAAA,IAAUD,GAFrC,cAEU9B,EAFV,yBAGWA,GAHX,gCAKIgC,EAAAA,GAAAA,MAAY,wDALhB,gFASO,SAASC,IAAqC,IAAlBC,EAAiB,uDAAH,EACzCJ,EAAG,UAAMF,EAAN,sCAA4CD,EAA5C,iBAA4DO,GACrE,OAAOL,EAAQC,EAChB,CAEM,SAASK,EAAkBC,GAAyB,IAAlBF,EAAiB,uDAAH,EAC/CJ,EAAG,UAAMF,EAAN,gCAAsCD,EAAtC,kBAAuDS,EAAvD,gCAAoFF,EAApF,wBACT,OAAOL,EAAQC,EAChB,CAEM,SAASO,EAAkB9C,GAEhC,OAAOsC,EADE,UAAMD,EAAN,iBAAuBrC,EAAvB,qBAA2CoC,EAA3C,mBAEV,CAEM,SAASW,EAAe/C,GAE7B,OAAOsC,EADE,UAAMD,EAAN,iBAAuBrC,EAAvB,4BAAkDoC,EAAlD,mBAEV,CAEM,SAASY,EAAkBhD,GAEhC,OAAOsC,EADE,UAAMD,EAAN,iBAAuBrC,EAAvB,4BAAkDoC,EAAlD,0BAEV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetails\":\"MovieDetailsPage_MovieDetails__6TA03\",\"Button\":\"MovieDetailsPage_Button__-VRMo\",\"Information\":\"MovieDetailsPage_Information__PyC7J\",\"Information_title\":\"MovieDetailsPage_Information_title__WscOD\",\"Link\":\"MovieDetailsPage_Link__LqLBX\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  Outlet,\n  NavLink,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport Loader from 'components/Loader';\nimport notFound from '../../images/NotFound.jpg';\nimport style from './MovieDetailsPage.module.css';\n\n// const Cast = lazy(() => import('../Cast/Cast'));\n// const Reviews = lazy(() => import('../Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    MovieApiServise.fetchDetailsMovie(movieId).then(response => {\n      if (response) {\n        setMovie(response.data);\n      } else {\n        return;\n      }\n    });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(location.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button className={style.Button} type=\"button\" onClick={onGoBack}>\n            Go Back\n          </button>\n\n          <div className={style.MovieDetailsPage}>\n            <div className={style.MovieDetails}>\n              <div className={style.MovieDetails_img}>\n                <img\n                  src={\n                    movie.poster_path ? (\n                      `https://www.themoviedb.org/t/p/w300${movie.poster_path}`\n                    ) : (\n                      <img src={notFound} alt=\"Not Found\" />\n                    )\n                  }\n                  alt={movie.title}\n                />\n              </div>\n              <div className={style.Information}>\n                <h2 className={style.Information_title}>{`${\n                  movie.title\n                } (${movie.release_date.slice(0, 4)})`}</h2>\n                <span>{`User score: ${Math.trunc(\n                  movie.vote_average * 10\n                )}%`}</span>\n                <h2 className={style.Information_title}>Overview:</h2>\n                <p>{movie.overview}</p>\n                <h2 className={style.Information_title}>Genres:</h2>\n                <span>{movie.genres.map(({ name }) => name).join(', ')}</span>\n              </div>\n            </div>\n\n            <div>\n              <h3>Additional information</h3>\n              <ul>\n                <li className={style.Link}>\n                  <NavLink\n                    to={`cast`}\n                    state={{ from: location.state?.from ?? null }}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className={style.Link}>\n                  <NavLink\n                    to={`reviews`}\n                    state={{ from: location.state?.from ?? null }}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '2bbca05b4a0698db2e0a185255a0cc70';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getData(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error('Sorry, but there is no information about this movie.');\n  }\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`;\n  return getData(url);\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`;\n  return getData(url);\n}\n\nexport function fetchDetailsMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`;\n  return getData(url);\n}\n\nexport function fetchCastMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return getData(url);\n}\n\nexport function fetchReviewsMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return getData(url);\n}\n"],"names":["MovieDetailsPage","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","MovieApiServise","then","response","data","className","style","type","onClick","state","from","src","poster_path","notFound","alt","title","release_date","slice","Math","trunc","vote_average","overview","genres","map","name","join","to","Suspense","fallback","Loader","API_KEY","BASE_URL","getData","url","axios","toast","fetchPopularMovies","currentPage","fetchSearchMovies","query","fetchDetailsMovie","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}