{"version":3,"file":"static/js/319.fca0dac3.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetails\":\"MovieDetailsPage_MovieDetails__6TA03\",\"Button\":\"MovieDetailsPage_Button__-VRMo\",\"Information\":\"MovieDetailsPage_Information__PyC7J\",\"Information_title\":\"MovieDetailsPage_Information_title__WscOD\",\"Link\":\"MovieDetailsPage_Link__LqLBX\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport Loader from 'components/Loader';\nimport notFound from '../../images/NotFound.jpg';\nimport style from './MovieDetailsPage.module.css';\nimport { toast } from 'react-toastify';\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    MovieApiServise.fetchDetailsMovie(movieId)\n      .then(response => setMovie(response))\n      .catch(error => toast.error('Error, sorry please'));\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button className={style.Button} type=\"button\" onClick={onGoBack}>\n            Go Back\n          </button>\n\n          <div className={style.MovieDetailsPage}>\n            <div className={style.MovieDetails}>\n              <div className={style.MovieDetails_img}>\n                <img\n                  src={\n                    movie.poster_path ? (\n                      `https://www.themoviedb.org/t/p/w300${movie.poster_path}`\n                    ) : (\n                      <img src={notFound} alt=\"Not Found\" />\n                    )\n                  }\n                  alt={movie.title}\n                />\n              </div>\n              <div className={style.Information}>\n                <h2 className={style.Information_title}>{`${\n                  movie.title\n                } (${movie.release_date.slice(0, 4)})`}</h2>\n                <span>{`User score: ${Math.trunc(\n                  movie.vote_average * 10\n                )}%`}</span>\n                <h2 className={style.Information_title}>Overview:</h2>\n                <p>{movie.overview}</p>\n                <h2 className={style.Information_title}>Genres:</h2>\n                <span>{movie.genres.map(({ name }) => name).join(', ')}</span>\n              </div>\n            </div>\n\n            <div>\n              <h3>Additional information</h3>\n              <ul>\n                <li className={style.Link}>\n                  <NavLink\n                    to={`cast`}\n                    state={{ from: location?.state?.from ?? null }}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li className={style.Link}>\n                  <NavLink\n                    to={`reviews`}\n                    state={{ from: location?.state?.from ?? null }}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path={`cast`} element={<Cast movieId={movieId} />} />\n\n                <Route\n                  path={`reviews`}\n                  element={<Reviews movieId={movieId} />}\n                />\n              </Routes>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","const API_KEY = '2bbca05b4a0698db2e0a185255a0cc70';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`\n  );\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`\n  );\n}\n\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchCastMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","MovieApiServise","then","response","catch","error","toast","className","style","type","onClick","state","from","src","poster_path","notFound","alt","title","release_date","slice","Math","trunc","vote_average","overview","genres","map","name","join","to","Suspense","fallback","Loader","path","element","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","fetchPopularMovies","currentPage","fetchSearchMovies","query","fetchDetailsMovie","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}