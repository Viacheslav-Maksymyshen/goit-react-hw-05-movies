{"version":3,"file":"static/js/305.f2a2176b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","components/MoviesPage/MoviesPage.js","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MovieList_List__Qi16k\",\"Item\":\"MovieList_Item__EriSG\",\"Title\":\"MovieList_Title__T5U9i\",\"Link\":\"MovieList_Link__vD+MJ\"};","import { NavLink } from 'react-router-dom';\nimport notFoundPoster from '../../images/NotFoundPoster.jpg';\nimport style from './MovieList.module.css';\n\nexport default function MovieList({ movies, location }) {\n  return (\n    <ul className={style.List}>\n      {movies.map(movie => (\n        <li key={movie.id} className={style.Item}>\n          <NavLink\n            className={style.Link}\n            to={{ pathname: `/movies/${movie.id}` }}\n            state={{ from: location }}\n          >\n            <img\n              src={\n                movie.poster_path\n                  ? `https://www.themoviedb.org/t/p/w185${movie.poster_path}`\n                  : notFoundPoster\n              }\n              alt={movie.title}\n            />\n            <p className={style.Title}>{movie.title}</p>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchForm_button\":\"Searchbar_SearchForm_button__OB9qt\",\"SearchImg\":\"Searchbar_SearchImg__8tFyn\",\"SearchForm_input\":\"Searchbar_SearchForm_input__50Ett\"};","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport style from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const queryValue = new URLSearchParams(location.search).get('query');\n\n    if (queryValue === null) {\n      return;\n    }\n\n    setSearchQuery(queryValue);\n  }, [location.search]);\n\n  const handleNameChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(searchQuery.trim().toLowerCase());\n    setSearchQuery('');\n  };\n\n  return (\n    <div className={style.Searchbar}>\n      <form className={style.SearchForm} onSubmit={handleSubmit}>\n        <button className={style.SearchForm_button} type=\"submit\">\n          <span>\n            <ImSearch />\n            <span className={style.SearchImg}>Search</span>\n          </span>\n        </button>\n\n        <input\n          className={style.SearchForm_input}\n          type=\"text\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleNameChange}\n        />\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  searchQuery: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Searchbar from '../Searchbar';\nimport MovieList from '../MovieList';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport notFound from '../../images/NotFound.png';\nimport { toast } from 'react-toastify';\n// import style from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const query = new URLSearchParams(location.search).get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    MovieApiServise.fetchSearchMovies(query)\n      .then(response => setMovies(response.results))\n      .catch(error => toast.error('Error, sorry please'));\n  }, [query]);\n\n  const handleSubmit = value => {\n    navigate({ search: `?query=${value}` });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n\n      {movies &&\n        (movies.length ? (\n          <MovieList location={location} movies={movies} />\n        ) : (\n          <img src={notFound} alt=\"Not Found\" />\n        ))}\n    </>\n  );\n}\n","const API_KEY = '2bbca05b4a0698db2e0a185255a0cc70';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`\n  );\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`\n  );\n}\n\nexport function fetchDetailsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchCastMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchReviewsMovie(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["MovieList","movies","location","className","style","map","movie","to","pathname","id","state","from","src","poster_path","notFoundPoster","alt","title","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","useLocation","useEffect","queryValue","URLSearchParams","search","get","event","preventDefault","trim","toLowerCase","type","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","MoviesPage","setMovies","navigate","useNavigate","query","MovieApiServise","then","response","results","catch","error","toast","length","notFound","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","fetchPopularMovies","currentPage","fetchSearchMovies","fetchDetailsMovie","movieId","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}