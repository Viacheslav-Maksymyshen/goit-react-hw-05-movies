{"version":3,"file":"static/js/855.0cfa6ab3.chunk.js","mappings":"oOACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oB,SCK7D,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA+BH,GAASI,MAAK,SAAAC,GACvCA,GACFN,EAAQM,EAASC,KAAKR,KAIzB,GACF,GAAE,CAACE,KAGF,8BACGF,IACC,gBAAKS,UAAWC,EAAhB,SACGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,aAA7B,OACR,gBAAkBN,UAAWC,EAA7B,WACE,gBACEM,IACED,EAAY,yCAC0BA,GAClCE,EAENC,IAAKJ,KAGP,eAAIL,UAAWC,EAAf,SAA6BI,KAC7B,uCAAeD,OAXRD,EADD,OAmBnB,C,uMCxCKO,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,EAAQ,GAARA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,gGAE2BC,EAAAA,EAAAA,IAAUD,GAFrC,cAEUf,EAFV,yBAGWA,GAHX,gCAKIiB,EAAAA,GAAAA,MAAY,wDALhB,gFASO,SAASC,IAAqC,IAAlBC,EAAiB,uDAAH,EACzCJ,EAAG,UAAMF,EAAN,sCAA4CD,EAA5C,iBAA4DO,GACrE,OAAOL,EAAQC,EAChB,CAEM,SAASK,EAAkBC,GAAyB,IAAlBF,EAAiB,uDAAH,EAC/CJ,EAAG,UAAMF,EAAN,gCAAsCD,EAAtC,kBAAuDS,EAAvD,gCAAoFF,EAApF,wBACT,OAAOL,EAAQC,EAChB,CAEM,SAASO,EAAkB3B,GAEhC,OAAOmB,EADE,UAAMD,EAAN,iBAAuBlB,EAAvB,qBAA2CiB,EAA3C,mBAEV,CAEM,SAASW,EAAe5B,GAE7B,OAAOmB,EADE,UAAMD,EAAN,iBAAuBlB,EAAvB,4BAAkDiB,EAAlD,mBAEV,CAEM,SAASY,EAAkB7B,GAEhC,OAAOmB,EADE,UAAMD,EAAN,iBAAuBlB,EAAvB,4BAAkDiB,EAAlD,0BAEV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","servises/MovieApiServise.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\",\"Item\":\"Cast_Item__NILYu\",\"Title\":\"Cast_Title__Pry6c\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as MovieApiServise from '../../servises/MovieApiServise';\nimport notFoundPoster from '../../images/NotFoundPoster.jpg';\nimport style from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    MovieApiServise.fetchCastMovie(movieId).then(response => {\n      if (response) {\n        setCast(response.data.cast);\n      } else {\n        return;\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <div className={style.Cast}>\n          {cast.map(({ cast_id, character, name, profile_path }) => (\n            <li key={cast_id} className={style.Item}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : notFoundPoster\n                }\n                alt={name}\n              />\n\n              <h3 className={style.Title}>{name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '2bbca05b4a0698db2e0a185255a0cc70';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getData(url) {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    toast.error('Sorry, but there is no information about this movie.');\n  }\n}\n\nexport function fetchPopularMovies(currentPage = 1) {\n  const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${currentPage}`;\n  return getData(url);\n}\n\nexport function fetchSearchMovies(query, currentPage = 1) {\n  const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${currentPage}&include_adult=false`;\n  return getData(url);\n}\n\nexport function fetchDetailsMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`;\n  return getData(url);\n}\n\nexport function fetchCastMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  return getData(url);\n}\n\nexport function fetchReviewsMovie(movieId) {\n  const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return getData(url);\n}\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","MovieApiServise","then","response","data","className","style","map","cast_id","character","name","profile_path","src","notFoundPoster","alt","API_KEY","BASE_URL","getData","url","axios","toast","fetchPopularMovies","currentPage","fetchSearchMovies","query","fetchDetailsMovie","fetchCastMovie","fetchReviewsMovie"],"sourceRoot":""}